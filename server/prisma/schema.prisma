// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  username      String    @unique
  email         String    @unique
  password      String
  createdAt     DateTime  @default(now()) @map("created_at")
  avatar        String?
  articles      Article[]
  comments      Comment[]
  likes         Like[]

  @@map("users")
}

model Article {
  id          String    @id @default(uuid())
  title       String
  content     String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  authorId    String    @map("author_id")
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments    Comment[]
  likes       Like[]

  @@map("articles")
}

model Comment {
  id          String    @id @default(uuid())
  content     String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  authorId    String    @map("author_id")
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  articleId   String    @map("article_id")
  article     Article   @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@map("comments")
}

model Like {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now()) @map("created_at")
  userId      String    @map("user_id")
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  articleId   String    @map("article_id")
  article     Article   @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@unique([userId, articleId])
  @@map("likes")
}
